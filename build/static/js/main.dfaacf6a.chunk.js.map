{"version":3,"sources":["CircleButton/CircleButton.js","notes-helpers.js","RouteContext.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NotePageContext.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/AddNote.js","errorBoundary/errorBoundary.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","findNote","notes","arguments","length","undefined","noteId","find","note","id","context","createContext","folders","createNewFolder","createNewNote","NoteListNav","_this$context","this","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","RouteContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","Note","onDeleteClick","format","modified","NoteListMain","deleteWithoutRedirect","noteID","_this2","notesForFolder","getNotesForFolder","Note_Note","NotePageContext","NotePageMain","deleteAndRedirect","then","content","split","para","i","NotefulForm","assign","action","AddFolder","state","folderName","folderNameValid","formValid","errorMessages","e","target","value","setState","preventDefault","Error","AddNote","updateName","isValid","errorMessage","nameValid","updateContent","contentValid","updateFolderId","folderIdValid","handleSubmit","NotefulForm_NotefulForm","onSubmit","htmlFor","onChange","class","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","App","deleteNote","fetch","method","res","ok","json","catch","err","console","log","newFolder","headers","Content-Type","body","JSON","stringify","data","toConsumableArray","message","newNote","Date","toISOString","folderPromise","notesPromise","Promise","all","apiData","_this$state","Fragment","path","Provider","Route","exact","component","_this3","_this$state2","errorBoundary_ErrorBoundary","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.dfaacf6a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CircleButton.css'\r\n\r\nexport default function NavCircleButton(props) {\r\n  const { tag, className, childrenm, ...otherProps } = props\r\n\r\n  return React.createElement(\r\n    props.tag,\r\n    {\r\n      className: ['NavCircleButton', props.className].join(' '),\r\n      ...otherProps\r\n    },\r\n    props.children\r\n  )\r\n}\r\n\r\nNavCircleButton.defaultProps ={\r\n  tag: 'a',\r\n}\r\n","\r\nexport const findFolder = (folders=[], folderId) =>\r\n  folders.find(folder => folder.id === folderId)\r\n\r\nexport const findNote = (notes=[], noteId) =>\r\n  notes.find(note => note.id === noteId)\r\n\r\nexport const getNotesForFolder = (notes=[], folderId) => (\r\n  (!folderId)\r\n    ? notes\r\n    : notes.filter(note => note.folderId === folderId)\r\n)\r\n\r\nexport const countNotesForFolder = (notes=[], folderId) =>\r\n  notes.filter(note => note.folderId === folderId).length\r\n","import React from 'react';\r\n\r\nconst context = React.createContext({\r\n  folders: [],\r\n  notes: [],\r\n  createNewFolder: () => {},\r\n  createNewNote: () => {}\r\n});\r\n\r\nexport default context;\r\n","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport { countNotesForFolder } from '../notes-helpers'\r\nimport RouteContext from '../RouteContext'\r\nimport './NoteListNav.css'\r\n\r\nexport default class NoteListNav extends React.Component {\r\n\r\n  static contextType = RouteContext;\r\n\r\n  render() {\r\n\r\n    const {folders, notes} = this.context;\r\n\r\n    return (\r\n      <div className='NoteListNav'>\r\n        <ul className='NoteListNav__list'>\r\n          {folders.map(folder =>\r\n            <li key={folder.id}>\r\n              <NavLink\r\n                className='NoteListNav__folder-link'\r\n                to={`/folder/${folder.id}`}\r\n              >\r\n                <span className='NoteListNav__num-notes'>\r\n                  {countNotesForFolder(notes, folder.id)}\r\n                </span>\r\n                {folder.name}\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListNav__button-wrapper'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-folder'\r\n            type='button'\r\n            className='NoteListNav__add-folder-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Folder\r\n          </CircleButton>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNoteListNav.defaultProps = {\r\n  folders: []\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport RouteContext from '../RouteContext'\r\nimport { findNote, findFolder} from '../notes-helpers';\r\nimport './NotePageNav.css'\r\n\r\nexport default class NotePageNav extends React.Component {\r\n\r\n  static contextType = RouteContext;\r\n\r\n  render() {\r\n    const { folders, notes } = this.context;\r\n\r\n    const noteId = this.props.match.params.noteId;\r\n    const note = findNote(notes, noteId) || {}\r\n    const folder = findFolder(folders, note.folderId)\r\n\r\n    return (\r\n      <div className='NotePageNav'>\r\n        <CircleButton\r\n          tag='button'\r\n          role='link'\r\n          onClick={() => this.props.history.goBack()}\r\n          className='NotePageNav__back-button'\r\n        >\r\n          <FontAwesomeIcon icon='chevron-left' />\r\n          <br />\r\n          Back\r\n        </CircleButton>\r\n        {folder && (\r\n          <h3 className='NotePageNav__folder-name'>\r\n            {folder.name}\r\n          </h3>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNotePageNav.defaultProps = {\r\n  history: {\r\n    goBack: () => {}\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Note.css'\r\n\r\nexport default function Note(props) {\r\n  return (\r\n    <div className='Note'>\r\n      <h2 className='Note__title'>\r\n        <Link to={`/note/${props.id}`}>\r\n          {props.name}\r\n        </Link>\r\n      </h2>\r\n      <button className='Note__delete' type='button' onClick={() => { props.onDeleteClick(props.id) }}>\r\n        <FontAwesomeIcon icon='trash-alt' />\r\n        {' '}\r\n        remove\r\n      </button>\r\n      <div className='Note__dates'>\r\n        <div className='Note__dates-modified'>\r\n          Modified\r\n          {' '}\r\n          <span className='Date'>\r\n            {format(props.modified, 'Do MMM YYYY')}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst context = React.createContext({\r\n  folders: [],\r\n  notes: [],\r\n  onDeleteClick: () => {},\r\n});\r\n\r\nexport default context;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Note from '../Note/Note'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport './NoteListMain.css'\r\nimport NotePageContext from '../NotePageContext'\r\nimport { getNotesForFolder } from '../notes-helpers'\r\n\r\nexport default class NoteListMain extends React.Component {\r\n  static contextType = NotePageContext;\r\n\r\n  deleteWithoutRedirect = (noteID) => {\r\n    this.context.onDeleteClick(noteID);\r\n  }\r\n\r\n  render(){\r\n\r\n    let folderId\r\n    if (this.props.match.params.folderId) {\r\n      folderId = this.props.match.params.folderId\r\n    }\r\n    const notesForFolder = getNotesForFolder(this.context.notes, folderId)\r\n\r\n\r\n  return (\r\n    <section className='NoteListMain'>\r\n      <ul>\r\n        {notesForFolder.map(note =>\r\n          <li key={note.id}>\r\n            <Note\r\n              id={note.id}\r\n              name={note.name}\r\n              modified={note.modified}\r\n              onDeleteClick={(id) => { this.deleteWithoutRedirect(id) }}\r\n            />\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <div className='NoteListMain__button-container'>\r\n        <CircleButton\r\n          tag={Link}\r\n          to='/add-note'\r\n          type='button'\r\n          className='NoteListMain__add-note-button'\r\n        >\r\n          <FontAwesomeIcon icon='plus' />\r\n          <br />\r\n          Note\r\n        </CircleButton>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n}\r\n\r\nNoteListMain.defaultProps = {\r\n  notes: [],\r\n}\r\n","import React from 'react'\r\nimport Note from '../Note/Note'\r\nimport './NotePageMain.css'\r\nimport NotePageContext from '../NotePageContext';\r\nimport { findNote } from '../notes-helpers'\r\n\r\nexport default class NotePageMain extends React.Component{\r\n  static contextType = NotePageContext;\r\n\r\n  deleteAndRedirect = (noteID) => {\r\n    this.context.onDeleteClick(noteID)\r\n      .then(() => {\r\n        this.props.history.goBack();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const note = findNote(this.context.notes, this.props.match.params.noteId)\r\n\r\n    if (!note) {\r\n      return <section className='NotePageMain'></section>\r\n    }\r\n\r\n    return (\r\n    <section className='NotePageMain'>\r\n      <Note\r\n        id={this.props.match.params.noteId}\r\n        name={note.name}\r\n        modified={note.modified}\r\n        onDeleteClick={(id) => { this.deleteAndRedirect(id) }}\r\n      />\r\n      <div className='NotePageMain__content'>\r\n        {note.content.split(/\\n \\r|\\n/).map((para, i) =>\r\n          <p key={i}>{para}</p>\r\n        )}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n}\r\n\r\nNotePageMain.defaultProps = {\r\n  note: {\r\n    content: '',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './NotefulForm.css'\r\n\r\nexport default function NotefulForm(props) {\r\n  const { className, ...otherProps } = props\r\n  return (\r\n    <form\r\n      className={['Noteful-form', className].join(' ')}\r\n      action='#'\r\n      {...otherProps}\r\n    />\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport RouteContext from '../RouteContext'\r\nimport './AddFolder.css'\r\n\r\nexport default class AddFolder extends Component {\r\n  static contextType = RouteContext;\r\n\r\n  state = {\r\n    folderName: '',\r\n    folderNameValid: false,\r\n    formValid: false,\r\n    errorMessages: {}\r\n  }\r\n\r\n\r\n  validateName(e){\r\n    \r\n    if(e.target.value.length >= 4 ){\r\n      this.setState({\r\n        folderNameValid: true,\r\n        folderName: e.target.value,\r\n        errorMessages:{folderName: null}\r\n      })\r\n    } else{\r\n      this.setState({\r\n        folderNameValid: false,\r\n        folderName: e.target.value,\r\n        errorMessages: {folderName: 'Folder name must be greater than 3 characters'}\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  validateForm(e){\r\n    e.preventDefault();\r\n    if(this.state.folderNameValid){\r\n      this.setState({\r\n        formValid:true\r\n      }, () => {this.context.createNewFolder(this.state)})\r\n      this.props.history.goBack()\r\n    } else{\r\n      this.setState({\r\n        formValid: false\r\n      })\r\n    }\r\n  \r\n\r\n  }\r\n\r\n  // handleNameOnChange(e){\r\n  //   this.setState({\r\n  //     folderName: e.target.value\r\n  //   })\r\n  // }\r\n\r\n\r\n  render() {\r\n    throw new Error('test');\r\n    return (\r\n      <section className='AddFolder'>\r\n        <h2>Create a folder</h2>\r\n        <NotefulForm id='notefulForm' name='nameForm' onSubmit={(e) => {this.validateForm(e)}}>\r\n          <div className='field'>\r\n            <label htmlFor='folder-name-input'>\r\n              Name\r\n            </label>\r\n            <input type='text' id='folder-name-input' name='folderName' onChange={(e) => this.validateName(e)} />\r\n          </div>\r\n          <div className='buttons'>\r\n            <button type='submit'>\r\n              Add folder\r\n            </button>\r\n          </div>\r\n        </NotefulForm>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NotefulForm from '../NotefulForm/NotefulForm'\r\nimport './AddNote.css'\r\nimport RouteContext from '../RouteContext'\r\n\r\nexport default class AddNote extends Component {\r\n\r\n  static defaultProps = {\r\n    folders: [],\r\n  }\r\n\r\n  static contextType = RouteContext\r\n\r\n  static state = {\r\n    formValid: false,\r\n\r\n    nameValid: false,\r\n    contentValid: false,\r\n    folderIdValid: false,\r\n\r\n    name: '',\r\n    content: '',\r\n    folderId: '',\r\n\r\n    errorMessages: {},\r\n  }\r\n\r\n  updateName = (e) => {\r\n\r\n    let isValid      = true;\r\n    let errorMessage = null;\r\n\r\n    if (e.target.value.length < 3) {\r\n      isValid = false;\r\n      errorMessage = 'Name must be greater than 2 characters in length';\r\n    }\r\n\r\n    if (e.target.value === 'foobar') {\r\n      isValid = false;\r\n      errorMessage = 'Name must not be \"foobar\"'\r\n    }\r\n\r\n    this.setState({\r\n      name: e.target.value,\r\n      nameValid: isValid,\r\n      errorMessages: {\r\n        name: errorMessage,\r\n      }\r\n    });\r\n  };\r\n\r\n  updateContent = (e) => {\r\n\r\n    let isValid      = true;\r\n    let errorMessage = null;\r\n\r\n    if (e.target.value.length < 5) {\r\n      isValid = false;\r\n      errorMessage = 'Content must be greater than 5 characters in length';\r\n    }\r\n\r\n    if (e.target.value === 'foobar') {\r\n      isValid = false;\r\n      errorMessage = 'Content must not be \"foobar\"'\r\n    }\r\n\r\n    this.setState({\r\n      content: e.target.value,\r\n      contentValid: isValid,\r\n      errorMessages: {\r\n        content: errorMessage,\r\n      }\r\n    });\r\n  };\r\n\r\n  updateFolderId = (e) => {\r\n\r\n    let isValid      = true;\r\n    let errorMessage = null;\r\n\r\n    if (e.target.value === '...') {\r\n      isValid = false;\r\n      errorMessage = 'Please choose a folder'\r\n    }\r\n\r\n    this.setState({\r\n      folderId: e.target.value,\r\n      folderIdValid: isValid,\r\n\r\n      errorMessages: {\r\n        folderId: errorMessage,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.nameValid && this.state.contentValid && this.state.folderIdValid) {\r\n\r\n      this.setState({ formValid: true });\r\n      this.context.createNewNote({\r\n        name     : this.state.name,\r\n        content  : this.state.content,\r\n        folderId : this.state.folderId\r\n      });\r\n      this.props.history.goBack();\r\n    } else {\r\n\r\n      this.setState({ formValid: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { folders } = this.context\r\n    return (\r\n      <section className='AddNote'>\r\n        <h2>Create a note</h2>\r\n        <NotefulForm onSubmit={(e) => { this.handleSubmit(e) }}>\r\n          <div className='field'>\r\n            <label htmlFor='note-name-input'>\r\n              Name\r\n            </label>\r\n            <input type='text' id='note-name-input' onChange={(e) => { this.updateName(e) }}/>\r\n            <p class=\"form-error\">{this.state && this.state.errorMessages.name}</p>\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='note-content-input'>\r\n              Content\r\n            </label>\r\n            <textarea id='note-content-input'  onChange={(e) => { this.updateContent(e) }}/>\r\n            <p class=\"form-error\">{this.state && this.state.errorMessages.content}</p>\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='note-folder-select'>\r\n              Folder\r\n            </label>\r\n            <select id='note-folder-select'  onChange={(e) => { this.updateFolderId(e) }}>\r\n              <option value={null}>...</option>\r\n              {folders.map(folder =>\r\n                <option key={folder.id} value={folder.id}>\r\n                  {folder.name}\r\n                </option>\r\n              )}\r\n            </select>\r\n            <p class=\"form-error\">{this.state && this.state.errorMessages.folderId}</p>\r\n          </div>\r\n          <div className='buttons'>\r\n            <button type='submit'>\r\n              Add note\r\n            </button>\r\n          </div>\r\n        </NotefulForm>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n  static getDerivedStateFromError() {\r\n      \r\n         return { hasError: true }\r\n  }\r\n  render() {\r\n      if (this.state.hasError){\r\n          return(\r\n            <div>\r\n              <h1>You have encountered an error. </h1>\r\n              <h5>¯\\(ツ)/¯ Call 555-555-5555 if problem persists</h5>\r\n              </div>\r\n          )\r\n      }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport NoteListNav from '../NoteListNav/NoteListNav'\r\nimport NotePageNav from '../NotePageNav/NotePageNav'\r\nimport NoteListMain from '../NoteListMain/NoteListMain'\r\nimport NotePageMain from '../NotePageMain/NotePageMain'\r\nimport AddFolder from '../AddFolder/AddFolder'\r\nimport AddNote from '../AddNote/AddNote'\r\nimport RouteContext from '../RouteContext';\r\nimport NotePageContext from '../NotePageContext';\r\nimport ErrorBoundary from '../errorBoundary/errorBoundary'\r\n\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    notes: [],\r\n    folders: [],\r\n  };\r\n\r\n  deleteNote = (noteId) => {\r\n\r\n    return fetch(`http://localhost:9090/notes/${noteId}`, { method: 'DELETE' })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`Error deleting note ${noteId}`);\r\n        }\r\n\r\n        return res.json();\r\n      })\r\n      .then(() => {\r\n        // get notes from api, set state\r\n        fetch('http://localhost:9090/notes')\r\n          .then((res) => {\r\n            if (!res.ok) {\r\n              throw new Error('Error retrieving notes list');\r\n            }\r\n\r\n            return res.json()\r\n          })\r\n          .then((notes) => {\r\n            this.setState({ notes })\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  createNewFolder = (newFolder) => {\r\n    console.log(newFolder)\r\n    const url = 'http://localhost:9090/folders'\r\n    fetch(url, {\r\n      headers: {\r\n      \"Content-Type\": \"application/json\"},\r\n      method: 'POST',\r\n      body: JSON.stringify({name: newFolder.folderName})\r\n    })\r\n    .then(res => {\r\n      if(!res.ok) {\r\n        console.log('Response not OK');\r\n        throw new Error(\"Failed to create new folder\")\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((data) => {\r\n      this.setState({\r\n        folders: [data, ...this.state.folders]\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err.message)\r\n    });\r\n  };\r\n\r\n  createNewNote = (newNote) => {\r\n\r\n    newNote.modified = new Date().toISOString();\r\n\r\n    fetch('http://localhost:9090/notes', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newNote)\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error('Failed to create new Note');\r\n        }\r\n\r\n        return res.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json);\r\n        this.setState({\r\n          notes: [ json, ...this.state.notes ]\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        throw err;\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const data = {};\r\n\r\n    const folderPromise = fetch('http://localhost:9090/folders')\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error('Error retrieving folders list');\r\n        }\r\n\r\n        return res.json();\r\n      });\r\n\r\n    const notesPromise = fetch('http://localhost:9090/notes')\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error('Error retrieving notes list');\r\n        }\r\n\r\n        return res.json();\r\n      });\r\n\r\n    Promise\r\n      .all([folderPromise, notesPromise])\r\n      .then((apiData) => {\r\n        data.folders = apiData[0];\r\n        data.notes   = apiData[1];\r\n\r\n        this.setState(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  renderNavRoutes() {\r\n    const { notes, folders } = this.state\r\n    return (\r\n      <>\r\n        {['/', '/folder/:folderId'].map(path =>\r\n          // <Route\r\n          //   exact\r\n          //   key={path}\r\n          //   path={path}\r\n          //   render={routeProps =>\r\n          //     <NoteListNav\r\n          //       folders={folders}\r\n          //       notes={notes}\r\n          //       {...routeProps}\r\n          //     />\r\n          //   }\r\n          // />\r\n          <RouteContext.Provider key={path} value={{folders, notes}} >\r\n            <Route\r\n              exact\r\n              key={path}\r\n              path={path}\r\n              component={NoteListNav}\r\n            />\r\n          </RouteContext.Provider>\r\n        )}\r\n        {/* <Route\r\n          path='/note/:noteId'\r\n          render={routeProps => {\r\n            const { noteId } = routeProps.match.params\r\n            const note = findNote(notes, noteId) || {}\r\n            const folder = findFolder(folders, note.folderId)\r\n            return (\r\n              <NotePageNav\r\n                {...routeProps}\r\n                folder={folder}\r\n              />\r\n            )\r\n          }}\r\n        /> */}\r\n        <RouteContext.Provider key=\"notePageNav\" value={{folders, notes}} >\r\n          <Route\r\n            path='/note/:noteId'\r\n            component={NotePageNav}\r\n          />\r\n        </RouteContext.Provider>\r\n        <Route\r\n          path='/add-folder'\r\n          component={NotePageNav}\r\n        />\r\n        <Route\r\n          path='/add-note'\r\n          component={NotePageNav}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  renderMainRoutes() {\r\n    const { notes, folders } = this.state\r\n    return (\r\n      <>\r\n        {['/', '/folder/:folderId'].map(path =>\r\n          // <Route\r\n          //   exact\r\n          //   key={path}\r\n          //   path={path}\r\n          //   render={routeProps => {\r\n          //     const { folderId } = routeProps.match.params\r\n          //     const notesForFolder = getNotesForFolder(notes, folderId)\r\n          //     return (\r\n          //       <NoteListMain\r\n          //         {...routeProps}\r\n          //         notes={notesForFolder}\r\n          //       />\r\n          //     )\r\n          //   }}\r\n          // />\r\n          <NotePageContext.Provider key={path} value={{folders, notes, onDeleteClick: this.deleteNote}} >\r\n          <Route\r\n            exact\r\n            key={path}\r\n            path={path}\r\n            component={NoteListMain}\r\n          />\r\n          </NotePageContext.Provider>\r\n        )}\r\n        {/* <Route\r\n          path='/note/:noteId'\r\n          render={routeProps => {\r\n            const { noteId } = routeProps.match.params\r\n            const note = findNote(notes, noteId)\r\n            return (\r\n              <NotePageMain\r\n                {...routeProps}\r\n                note={note}\r\n              />\r\n            )\r\n          }}\r\n        /> */}\r\n        <NotePageContext.Provider key=\"notePageMain\" value={{folders, notes, onDeleteClick: this.deleteNote}} >\r\n        <Route\r\n          path='/note/:noteId'\r\n          component={NotePageMain}\r\n              />\r\n        </NotePageContext.Provider >\r\n        <RouteContext.Provider value={{createNewFolder: this.createNewFolder}}>\r\n        <Route\r\n          path='/add-folder'\r\n          component={AddFolder}\r\n        />\r\n        </RouteContext.Provider>\r\n        {/* <Route\r\n          path='/add-note'\r\n          render={routeProps => {\r\n            return (\r\n              <AddNote\r\n                {...routeProps}\r\n                folders={folders}\r\n              />\r\n            )\r\n          }}\r\n        /> */}\r\n        <RouteContext.Provider key=\"addNote\" value={{folders, createNewNote: this.createNewNote}} >\r\n        <Route\r\n          path='/add-note'\r\n          component={AddNote}\r\n        />\r\n        </RouteContext.Provider>\r\n      </>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n      <div className='App'>\r\n        <nav className='App__nav'>\r\n          {this.renderNavRoutes()}\r\n        </nav>\r\n        <header className='App__header'>\r\n          <h1>\r\n            <Link to='/'>Noteful</Link>\r\n            {' '}\r\n            <FontAwesomeIcon icon='check-double' />\r\n          </h1>\r\n        </header>\r\n        <main className='App__main'>\r\n          {this.renderMainRoutes()}\r\n        </main>\r\n      </div>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport 'typeface-roboto'\r\nimport './index.css'\r\nimport App from './App/App'\r\n\r\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}